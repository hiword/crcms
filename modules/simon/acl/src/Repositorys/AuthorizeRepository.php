<?php
/**
 * Created by PhpStorm.
 * User: simon
 * Date: 2016/9/1
 * Time: 12:25
 */

namespace Simon\Acl\Repositorys;


use Simon\Acl\Models\AclAppAuthorize;
use Simon\Acl\Repositorys\Interfaces\AuthorizeRepositoryInterface;
use Simon\Kernel\Repositorys\AbstraceRepository;

class AuthorizeRepository extends AbstraceRepository implements AuthorizeRepositoryInterface
{

    const STATUS_OPEN = 1;

    const STATUS_CLOSE = 2;

    const STATUS = [self::STATUS_OPEN=>'开启',self::STATUS_CLOSE=>'关闭'];

    public function __construct(AclAppAuthorize $Model)
    {
        parent::__construct($Model);
    }

    public function findOpenAll()
    {
        return $this->model->status(1)->orderBy('id','desc')->get();
    }

    public function create(array $data)
    {
        // TODO: Change the autogenerated stub
        return parent::create([
            'name'=>$data['name'],
            'status'=>$data['status'],
            'remark'=>$data['remark'],
            'app_key'=>$this->createSecretKey(),
        ]);
    }

    protected function createSecretKey()
    {
        return sha1(time().uniqid().str_random(10));
    }

    public function update(array $data, int $id)
    {
        // TODO: Change the autogenerated stub
        return parent::update([
            'name'=>$data['name'],
            'status'=>$data['status'],
            'remark'=>$data['remark'],
        ], $id);
    }

    public function status() : array
    {
        // TODO: Implement status() method.
        return static::STATUS;
    }

    public function statusOpen() : int
    {
        // TODO: Implement statusOpen() method.
        return static::STATUS_OPEN;
    }

    public function statusClose() : int
    {
        // TODO: Implement statusClose() method.
        return static::STATUS_CLOSE;
    }


}