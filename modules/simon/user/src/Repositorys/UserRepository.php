<?php
/**
 * Created by PhpStorm.
 * User: simon
 * Date: 2016/8/21
 * Time: 12:01
 */

namespace Simon\User\Repositorys;


use App\Repositorys\AbstraceRepository;
use Illuminate\Support\Facades\DB;
use Simon\User\Models\User;
use Simon\User\Repositorys\Interfaces\UserRepositoryInterface;

class UserRepository extends AbstraceRepository implements UserRepositoryInterface
{

    /**
     * 邮件验证
     */
    const MAIL_STATUS_VERIFY = 1;

    /**
     * 邮件未验证
     */
    const MAIL_STATUS_NOT_VERIFY = 0;

    /**
     * 邮件验证失败
     */
    const MAIL_STATUS_VERIFY_FAIL = 2;


    const MAIL_STATUS = [
        self::MAIL_STATUS_VERIFY=>'已验证',
        self::MAIL_STATUS_NOT_VERIFY=>'未验证',
        self::MAIL_STATUS_VERIFY_FAIL=>'验证失败',
    ];


    const MOBILE_STATUS_VERIFY = 1;

    const MOBILE_STATUS_NOT_VERIFY = 0;

    const MOBILE_STATUS_VERIFY_FAIL = 2;

    const MOBILE_STATUS = [
        self::MOBILE_STATUS_VERIFY=>'已验证',
        self::MOBILE_STATUS_NOT_VERIFY=>'未验证',
        self::MOBILE_STATUS_VERIFY_FAIL=>'验证失败',
    ];




    public function __construct(User $User)
    {
        parent::__construct($User);
    }

    public function paginate(int $perPage = 15, array $columns = ['*'])
    {
        // TODO: Change the autogenerated stub

        $models = parent::paginate($perPage, $columns);

        $models->each(function($model){
            $model->mail_status = $this->mailStatus()[$model->mail_status];
            $model->mobile_status = $this->mobileStatus()[$model->mobile_status];
        });

        return $models;
    }

    /**
     * 存储登录信息
     * @param User $user
     * @return User
     */
    public function storeLoginInfo(User $user) : User
    {
        // TODO: Implement storeLoginInfo() method.
        $user->login_time = time();
        $user->login_ip = ip_long(app('request')->ip());
        $user->save();
        return $user;
    }


    public function mobileStatusVerify() : int
    {
        return static::MOBILE_STATUS_VERIFY_FAIL;
    }

    public function mobileStatusNotVerify() : int
    {
        return static::MOBILE_STATUS_NOT_VERIFY;
    }

    public function mobileStatusVerifyFail() : int
    {
        return static::MOBILE_STATUS_VERIFY_FAIL;
    }

    public function mobileStatus() : array
    {
        return static::MOBILE_STATUS;
    }


    public function mailStatusVerify() : int
    {
        return static::MAIL_STATUS_VERIFY;
    }

    public function mailStatusNotVerify() : int
    {
        return static::MAIL_STATUS_NOT_VERIFY;
    }

    public function mailStatusVerifyFail() : int
    {
        return static::MAIL_STATUS_VERIFY_FAIL;
    }

    public function mailStatus() : array
    {
        return static::MAIL_STATUS;
    }

}