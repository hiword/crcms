<?php
/**
 * Created by PhpStorm.
 * User: simon
 * Date: 2016/8/24
 * Time: 11:27
 */
use Illuminate\Foundation\Testing\WithoutMiddleware;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\DatabaseTransactions;

class Register extends TestCase
{

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        \Illuminate\Support\Facades\Session::start();
    }

    /**
     * 注册需要的测试数据
     * @return array
     */
    public function testData() : array
    {//'name'=>str_random(16),
        $data = ['_token'=>csrf_token(),'name'=>str_random(16),'password'=>'123456','email'=>str_random(15).'@qq.com'];
        return $data;
    }

    /**
     * @depends testData
     * @param array $data
     */
    /*public function testValidate(array $data)
    {
        $register = app(\Simon\User\Http\Requests\RegisterRequest::class);
        $b = $register->getValidatorInstance();
        dd($b);
    }*/

    /**
     * @depends testData
     * @param array $data
     */
    public function testRegister(array $data)
    {
        //$Register = new \Simon\User\Services\RegisterService(new \Simon\User\Repositorys\UserRepository(new \Simon\User\Models\User()));
//        $register = app(\Simon\User\Services\RegisterService::class);
        $Register = app(\Simon\User\Repositorys\UserRepository::class);
        $request = app('request');
        $user = $Register->register($data,ip_long($request->ip()));

        return $user;
    }

    /**
     * @depends testRegister
     * @param int $userId
     */
    public function testMailCode(\Simon\User\Models\User $user)
    {
//        $mailCode = app(\Simon\User\Services\UserMailCodeService::class);
        $mailCode = app(\Simon\User\Repositorys\UserMailCodeRepository::class);
        $hash = $mailCode->generate($user->id);

        return $hash;
//dd($hash);
        //$this->assertString($hash);
    }

    /**
     * @depends testRegister
     * @depends testMailCode
     * @param string $hash
     */
    public function testSendMail(\Simon\User\Models\User $user,string $hash)
    {
        $mailer = new \Simon\User\Mails\RegisterMail($user,$hash);

        mailer($user->email,$mailer);
    }

    /**
     * @return \Illuminate\Foundation\Application|mixed
     */
    public function testRequest()
    {
        return app(\Illuminate\Http\Request::class);
    }

    /**
     * @depends testRegister
     * @depends testRequest
     * @param \Simon\User\Models\User $user
     * @param \Illuminate\Http\Request $request
     */
    public function testAuthLog(\Simon\User\Models\User $user,\Illuminate\Http\Request $request)
    {
        auth_logger(1,$user);

//        $auth = new \Simon\User\Services\AuthLogService(new \Simon\User\Repositorys\AuthLogRepository(new \Simon\User\Models\AuthLog()));

//        $auth->log([
//            'user_id'=>$user->id,
//            'client_ip'=>$request->ip(),
//            'browser'=>'Firefox',
//            'name'=>$user->name
//        ]);
        /*auth_loger([
            'user_id'=>$user->id,
            'client_ip'=>$request->ip(),
            'browser'=>'Firefox',
            'name'=>$user->name
        ]);*/
//        auth_loger(\Simon\User\Repositorys\AuthLogRepository::TYPE_REGISTER,$user);
    }

    /**
     * @depends testRegister
     */
//    public function testAuthSession(\Simon\User\Models\User $user)
//    {
//
//        \Illuminate\Support\Facades\Auth::login($user);
//
//        $this->assertSessionHas('id',$user->id);
//    }

    /**
     * @depends testData
     */
//    public function testValidator(array $data)
//    {
////        $request = app(\Simon\User\Http\Requests\RegisterRequest::class);
////        dd($request);
////        $validator = $request->getMessages();
////        dd($validator);
//    }

    /**
     *
     * @depends testData
     */
    /*public function testRegister(array $data)
    {

        $Register = new \Simon\User\Services\RegisterService(new \Simon\User\Repositorys\UserRepository(new \Simon\User\Models\User()));
//
//        $data = ['_token'=>csrf_token(),'name'=>str_random(16),'password'=>'123456','email'=>str_random(15).'@qq.com'];
        $b = $Register->register($data)->getUser();
//dd($b);
       // $this->assert
//        $this->submitForm('#submit',$data);
//
//        return;
//        $this->assertResponseOk();

        $response = $this->post('auth/register',$data);
        dd($response->getStatusMessage());
//        $this->assertEquals('success');
//        $this->anOne
//        $this->submitForm('123',$data);

//        $response = $this->post('auth/register',$data);
//        dd($response->getResult());
//        dd($response->getStatusMessage());
    }*/

    /*
    public function testAbc()
    {
        $array = [];
        $this->assertEmpty($array);
    }*/

}